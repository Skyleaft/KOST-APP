<metro:MetroWindow
    x:Class="KOST_APP.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converters="clr-namespace:MahApps.Metro.IconPacks.Converter;assembly=MahApps.Metro.IconPacks.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:KOST_APP"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:viewpage="clr-namespace:KOST_APP.Views"
    Title="MainWindow"
    Width="1280"
    Height="720"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{materialDesign:MaterialDesignFont}"
    ResizeMode="NoResize"
    TextElement.FontSize="14"
    TextElement.FontWeight="Medium"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    mc:Ignorable="d">
    <metro:MetroWindow.Resources>
        <ResourceDictionary>
            <!--  This is the template for all menu items. In this sample we use the glyph items.  -->
            <DataTemplate x:Key="HamburgerMenuItem" DataType="{x:Type Controls:HamburgerMenuIconItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{Binding Icon}"
                        Focusable="False"
                        IsTabStop="False" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <!--  This is the template for all option menu items.  -->
            <DataTemplate x:Key="HamburgerOptionsMenuItem" DataType="{x:Type Controls:HamburgerMenuItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:HamburgerMenu}}, Path=CompactPaneLength}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        Grid.Column="0"
                        Content="{Binding Tag}"
                        Focusable="False"
                        IsTabStop="False" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <ObjectDataProvider
                x:Key="DisplayModeEnumValues"
                MethodName="GetValues"
                ObjectType="{x:Type Controls:SplitViewDisplayMode}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Controls:SplitViewDisplayMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider
                x:Key="VisibilityEnumValues"
                MethodName="GetValues"
                ObjectType="{x:Type Visibility}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Visibility" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <!--  Animasi Ganti Warna  -->
            <Storyboard x:Key="colour_change">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="animation_color" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase EasingMode="EaseIn" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="animation_color" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.343">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.6">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Hidden</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="animation_color" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1.4">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="animation_color" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1.5">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="animation_color" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="animation_color" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </ResourceDictionary>
    </metro:MetroWindow.Resources>

    <materialDesign:DialogHost Identifier="MainDialog1" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <Grid>
            <metro:HamburgerMenu
                x:Name="HamburgerMenuControl"
                HamburgerVisibility="Collapsed"
                HamburgerWidth="48"
                IsPaneOpen="True"
                ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                ItemTemplate="{StaticResource HamburgerMenuItem}"
                OptionsItemTemplate="{StaticResource HamburgerOptionsMenuItem}"
                SelectedIndex="0"
                Style="{StaticResource MahApps.Styles.HamburgerMenu.CreatorsUpdate}"
                VerticalScrollBarOnLeftSide="False">
                <!--  Items  -->
                <metro:HamburgerMenu.ItemsSource>
                    <metro:HamburgerMenuItemCollection>
                        <metro:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Home}" Label="Home">
                            <metro:HamburgerMenuIconItem.Tag>
                                <viewpage:viewBeranda />
                            </metro:HamburgerMenuIconItem.Tag>
                        </metro:HamburgerMenuIconItem>

                        <metro:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=HomeCircleOutline}" Label="Data Kost">
                            <metro:HamburgerMenuIconItem.Tag>
                                <viewpage:viewDataKost />
                            </metro:HamburgerMenuIconItem.Tag>
                        </metro:HamburgerMenuIconItem>

                        <metro:HamburgerMenuIconItem Icon="{iconPacks:FontAwesome Kind=HouseUserSolid}" Label="Data Kamar">
                            <metro:HamburgerMenuIconItem.Tag>
                                <viewpage:viewDataKamar />
                            </metro:HamburgerMenuIconItem.Tag>
                        </metro:HamburgerMenuIconItem>

                        <metro:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=AccountGroup}" Label="Data Customer">
                            <metro:HamburgerMenuIconItem.Tag>
                                <viewpage:viewCustomer />
                            </metro:HamburgerMenuIconItem.Tag>
                        </metro:HamburgerMenuIconItem>


                    </metro:HamburgerMenuItemCollection>
                </metro:HamburgerMenu.ItemsSource>

                <!--  Options  -->
                <metro:HamburgerMenu.OptionsItemsSource>
                    <metro:HamburgerMenuItemCollection>
                        <metro:HamburgerMenuGlyphItem Label="Pengaturan">
                            <metro:HamburgerMenuGlyphItem.Tag>
                                <iconPacks:PackIconMaterial
                                    Width="22"
                                    Height="22"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="Cog" />
                            </metro:HamburgerMenuGlyphItem.Tag>
                        </metro:HamburgerMenuGlyphItem>
                        <metro:HamburgerMenuGlyphItem Label="LogOut">
                            <metro:HamburgerMenuGlyphItem.Tag>
                                <iconPacks:PackIconMaterial
                                    Width="22"
                                    Height="22"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="Logout" />
                            </metro:HamburgerMenuGlyphItem.Tag>
                        </metro:HamburgerMenuGlyphItem>
                    </metro:HamburgerMenuItemCollection>
                </metro:HamburgerMenu.OptionsItemsSource>

                <!--  Content  -->
                <metro:HamburgerMenu.ContentTemplate>
                    <DataTemplate>
                        <Grid x:Name="ContentGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="48" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0">
                                <TextBlock
                                    x:Name="Header"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="24"
                                    Text="{Binding Label}" />
                            </Border>
                            <metro:TransitioningContentControl
                                Grid.Row="1"
                                Content="{Binding Glyph}"
                                RestartTransitionOnContentChange="True"
                                Transition="Default">
                                <metro:TransitioningContentControl.ContentTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding Mode=OneWay, Converter={converters:NullToUnsetValueConverter}}" />
                                    </DataTemplate>
                                </metro:TransitioningContentControl.ContentTemplate>
                            </metro:TransitioningContentControl>
                        </Grid>
                    </DataTemplate>
                </metro:HamburgerMenu.ContentTemplate>
            </metro:HamburgerMenu>

            <Ellipse
                x:Name="animation_color"
                Fill="{DynamicResource AccentColorBrush}"
                RenderTransformOrigin="0.5,0.5"
                StrokeDashCap="Square"
                Visibility="Hidden">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Ellipse.RenderTransform>
            </Ellipse>

        </Grid>
    </materialDesign:DialogHost>
</metro:MetroWindow>
