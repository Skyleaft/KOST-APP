<metro:MetroWindow
    x:Class="KOST_APP.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converters="clr-namespace:MahApps.Metro.IconPacks.Converter;assembly=MahApps.Metro.IconPacks.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:KOST_APP"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:viewpage="clr-namespace:KOST_APP.Views"
    Title="MainWindow"
    Width="1280"
    Height="720"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{materialDesign:MaterialDesignFont}"
    ResizeMode="NoResize"
    TextElement.FontSize="14"
    TextElement.FontWeight="Medium"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    mc:Ignorable="d">
    <metro:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/HamburgerMenuTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--  This is the template for all option menu items.  -->
            <DataTemplate x:Key="HamburgerMenuItem" DataType="{x:Type Controls:HamburgerMenuGlyphItem}">
                <DockPanel Height="48" LastChildFill="True">
                    <Grid
                        x:Name="IconPart"
                        Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:HamburgerMenu}}, Path=CompactPaneLength}"
                        DockPanel.Dock="Left">
                        <ContentControl
                            Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{Binding Icon}"
                            Focusable="False"
                            IsTabStop="False" />
                    </Grid>
                    <TextBlock
                        x:Name="TextPart"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="{Binding Label}" />
                </DockPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:HamburgerMenu}}, Path=PanePlacement}" Value="Right">
                        <Setter TargetName="IconPart" Property="DockPanel.Dock" Value="Right" />
                        <Setter TargetName="TextPart" Property="Margin" Value="8,0,0,0" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <!--  This is the template for the option menu item  -->
            <DataTemplate x:Key="HamburgerOptionsMenuItem" DataType="{x:Type Controls:HamburgerMenuIconItem}">
                <DockPanel Height="48" LastChildFill="True">
                    <ContentControl
                        x:Name="IconPart"
                        Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:HamburgerMenu}}, Path=CompactPaneLength}"
                        Content="{Binding Icon}"
                        DockPanel.Dock="Left"
                        Focusable="False"
                        IsTabStop="False" />
                    <TextBlock
                        x:Name="TextPart"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="{Binding Label}" />
                </DockPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:HamburgerMenu}}, Path=PanePlacement}" Value="Right">
                        <Setter TargetName="IconPart" Property="DockPanel.Dock" Value="Right" />
                        <Setter TargetName="TextPart" Property="Margin" Value="8,0,0,0" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <ObjectDataProvider
                x:Key="DisplayModeEnumValues"
                MethodName="GetValues"
                ObjectType="{x:Type Controls:SplitViewDisplayMode}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Controls:SplitViewDisplayMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider
                x:Key="VisibilityEnumValues"
                MethodName="GetValues"
                ObjectType="{x:Type Visibility}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Visibility" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>


            <!--  Animasi Ganti Warna  -->
            <Storyboard x:Key="colour_change">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="animation_color" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase EasingMode="EaseIn" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="animation_color" Storyboard.TargetProperty="(UIElement.Visibility)">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.343">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.6">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Hidden</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="animation_color" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1.4">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="animation_color" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1.5">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="animation_color" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="animation_color" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <BackEase Amplitude="0.4" EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

        </ResourceDictionary>
    </metro:MetroWindow.Resources>

    <materialDesign:DialogHost Identifier="MainDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <Grid>
            <Controls:HamburgerMenu
                x:Name="HamburgerMenuControl"
                DisplayMode="CompactOverlay"
                HamburgerWidth="48"
                IsPaneOpen="True"
                ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                ItemTemplate="{StaticResource HamburgerMenuItem}"
                OptionsItemTemplate="{StaticResource HamburgerOptionsMenuItem}"
                SelectedIndex="0">
                <!--  Header  -->
                <Controls:HamburgerMenu.HamburgerMenuHeaderTemplate>
                    <DataTemplate>
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="16"
                            Foreground="White"
                            Text="Kost APP" />
                    </DataTemplate>
                </Controls:HamburgerMenu.HamburgerMenuHeaderTemplate>

                <!--  Items  -->
                <Controls:HamburgerMenu.ItemsSource>
                    <metro:HamburgerMenuItemCollection>
                        <metro:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Home}" Label="Home">
                            <metro:HamburgerMenuIconItem.Tag>
                                <viewpage:viewBeranda />
                            </metro:HamburgerMenuIconItem.Tag>
                        </metro:HamburgerMenuIconItem>

                        <!--<metro:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Food}" Label="Data Produk">
                            <metro:HamburgerMenuIconItem.Tag>
                                <viewpage:PageProduk />
                            </metro:HamburgerMenuIconItem.Tag>
                        </metro:HamburgerMenuIconItem>

                        <metro:HamburgerMenuIconItem Icon="{iconPacks:Modern Kind=BookList}" Label="Data Katalog">
                            <metro:HamburgerMenuIconItem.Tag>
                                <viewpage:PageKatalog />
                            </metro:HamburgerMenuIconItem.Tag>
                        </metro:HamburgerMenuIconItem>

                        <metro:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Message}" Label="Data Pesan">
                            <metro:HamburgerMenuIconItem.Tag>
                                <viewpage:PageMessage />
                            </metro:HamburgerMenuIconItem.Tag>
                        </metro:HamburgerMenuIconItem>

                        <metro:HamburgerMenuIconItem Icon="{iconPacks:Modern Kind=ProjectorScreen}" Label="Tampilkan">
                            <metro:HamburgerMenuIconItem.Tag>
                                <viewpage:PageFrontend />
                            </metro:HamburgerMenuIconItem.Tag>
                        </metro:HamburgerMenuIconItem>-->

                    </metro:HamburgerMenuItemCollection>
                </Controls:HamburgerMenu.ItemsSource>

                <!--  Options  -->
                <Controls:HamburgerMenu.OptionsItemsSource>
                    <Controls:HamburgerMenuItemCollection>

                        <Controls:HamburgerMenuIconItem Label="Pengaturan">
                            <Controls:HamburgerMenuIconItem.Icon>
                                <iconPacks:PackIconMaterial
                                    Width="22"
                                    Height="22"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="SettingsHelper" />
                            </Controls:HamburgerMenuIconItem.Icon>
                            <Controls:HamburgerMenuIconItem.Tag>
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="28"
                                    FontWeight="Bold">
                                    Pengaturan
                                </TextBlock>
                            </Controls:HamburgerMenuIconItem.Tag>
                        </Controls:HamburgerMenuIconItem>

                        <Controls:HamburgerMenuIconItem Label="Logout">
                            <Controls:HamburgerMenuIconItem.Icon>
                                <iconPacks:PackIconMaterial
                                    Width="22"
                                    Height="22"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Kind="Logout" />
                            </Controls:HamburgerMenuIconItem.Icon>
                            <Controls:HamburgerMenuIconItem.Tag>
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="28"
                                    FontWeight="Bold">
                                    Logout
                                </TextBlock>
                            </Controls:HamburgerMenuIconItem.Tag>
                        </Controls:HamburgerMenuIconItem>

                    </Controls:HamburgerMenuItemCollection>
                </Controls:HamburgerMenu.OptionsItemsSource>

                <!--  Content  -->
                <Controls:HamburgerMenu.ContentTemplate>
                    <DataTemplate>
                        <Grid x:Name="ContentGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="48" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border
                                Grid.Row="0"
                                Margin="-1,0,-1,0"
                                Background="#7A7A7A">
                                <TextBlock
                                    x:Name="Header"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontSize="24"
                                    Foreground="White"
                                    Text="{Binding Label}" />
                            </Border>
                            <Controls:TransitioningContentControl
                                Grid.Row="1"
                                Content="{Binding}"
                                RestartTransitionOnContentChange="True"
                                Transition="Default">

                                <Controls:TransitioningContentControl.Resources>
                                    <DataTemplate DataType="{x:Type Controls:HamburgerMenuGlyphItem}">
                                        <Image Source="{Binding Glyph, Mode=OneWay, Converter={converters:NullToUnsetValueConverter}}" />
                                    </DataTemplate>

                                    <DataTemplate DataType="{x:Type Controls:HamburgerMenuIconItem}">
                                        <ContentControl
                                            Content="{Binding Tag, Mode=OneWay}"
                                            Focusable="True"
                                            IsTabStop="False" />
                                    </DataTemplate>
                                </Controls:TransitioningContentControl.Resources>

                            </Controls:TransitioningContentControl>
                        </Grid>
                    </DataTemplate>
                </Controls:HamburgerMenu.ContentTemplate>
            </Controls:HamburgerMenu>

            <Ellipse
                x:Name="animation_color"
                Fill="{DynamicResource AccentColorBrush}"
                RenderTransformOrigin="0.5,0.5"
                StrokeDashCap="Square"
                Visibility="Hidden">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Ellipse.RenderTransform>
            </Ellipse>

        </Grid>
    </materialDesign:DialogHost>
</metro:MetroWindow>
